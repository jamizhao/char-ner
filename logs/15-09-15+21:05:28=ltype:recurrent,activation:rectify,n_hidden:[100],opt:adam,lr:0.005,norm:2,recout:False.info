activation:	rectify
feat:	basic_seg
fepoch:	50
grad_clip:	-1
log:	das_auto
lr:	0.005
ltype:	recurrent
n_batch:	10
n_hidden:	[100]
norm:	2
opt:	adam
recout:	False
sample:	[]
truncate:	-1
['c= ', 'c=!', 'c="', 'c=$', 'c=%', 'c=&', "c='", 'c=(', 'c=)', 'c=*', 'c=+', 'c=,', 'c=-', 'c=.', 'c=/', 'c=0', 'c=1', 'c=2', 'c=3', 'c=4', 'c=5', 'c=6', 'c=7', 'c=8', 'c=9', 'c=:', 'c=;', 'c==', 'c=?', 'c=@', 'c=A', 'c=B', 'c=C', 'c=D', 'c=E', 'c=F', 'c=G', 'c=H', 'c=I', 'c=J', 'c=K', 'c=L', 'c=M', 'c=N', 'c=O', 'c=P', 'c=Q', 'c=R', 'c=S', 'c=T', 'c=U', 'c=V', 'c=W', 'c=X', 'c=Y', 'c=Z', 'c=[', 'c=]', 'c=`', 'c=a', 'c=b', 'c=c', 'c=d', 'c=e', 'c=f', 'c=g', 'c=h', 'c=i', 'c=j', 'c=k', 'c=l', 'c=m', 'c=n', 'c=o', 'c=p', 'c=q', 'c=r', 'c=s', 'c=t', 'c=u', 'c=v', 'c=w', 'c=x', 'c=y', 'c=z', 'isspace', 'wend', 'wstart']
['b-LOC' 'b-MISC' 'b-ORG' 'b-PER' 'i-LOC' 'i-MISC' 'i-ORG' 'i-PER' 'l-LOC'
 'l-MISC' 'l-ORG' 'l-PER' 'o' 'u-MISC' 'u-ORG']
['B-LOC' 'B-MISC' 'B-ORG' 'B-PER' 'I-LOC' 'I-MISC' 'I-ORG' 'I-PER' 'L-LOC'
 'L-MISC' 'L-ORG' 'L-PER' 'O' 'U-LOC' 'U-MISC' 'U-ORG' 'U-PER']
# of sents trn, dev, tst: 14041 3250 3453
NF: 88 NC: 15
maxlen: 512 minlen: 1
l_in: (None, 512, 88)
l_mask: (Subtensor{int64}.0, 512)
l_forward: (None, 512, 100)
l_backward: (None, 512, 100)
l_concat: (None, 512, 200)
l_reshape: (None, 200)
l_rec_out: (None, 15)
l_out: (None, 512, 15)
[W, b, W, W, b, W, W, b]
[dot.0, DimShuffle{1}.0, Subtensor{int64}.0, dot.0, DimShuffle{1}.0, Subtensor{int64}.0, dot.0, DimShuffle{1}.0]
Computing updates ...
Compiling functions ...
